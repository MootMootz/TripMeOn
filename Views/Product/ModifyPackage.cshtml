@model TripMeOn.Models.Products.TourPackage
@using TripMeOn.Helper
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section ExtraCss{
  
    <link rel="stylesheet" href="/css/ModifyRemove.css">
}
@*Form class=used to group elements with similar characteristics or for styling purposes
Form id= used to uniquely identify a specific element on a webpage:more like for javascript*@

<h2 class="center-heading">Modify Package</h2>
<form id="modifyForm@Model.Id" class="modifyForm hidden" method="POST" action="/Product/ModifyPackage">
   
    <div class="form-container">
    <fieldset>
        <legend>Package Details</legend>
        <div class="form-group">
            <input type="hidden" name="packageId" value="@Model.Id" />
            <input type="hidden" name="action" value="remove" />

            <label for="name">Name</label>
            <input type="text" id="name" name="name" class="form-control" value="@Model.Name" />
        </div>
        <div class="form-group">
            <label for="country">Country</label>
            <input type="text" id="country" name="country" class="form-control" value="@Model.Destination.Country" />
        </div>

        <div class="form-group">
            <label for="themeName">Theme</label>
            <input type="text" id="themeName" name="themeName" class="form-control" value="@Model.Theme.Name" />
        </div>

        <div class="form-group">
            <label for="region">Region</label>
            <input type="text" id="region" name="region" class="form-control" value="@Model.Destination.Region" />
        </div>

        <div class="form-group">
            <label for="city">City</label>
            <input type="text" id="city" name="city" class="form-control" value="@Model.Destination.City" />
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <input type="text" id="description" name="description" class="form-control" value="@Model.Description" />
        </div>

        <div class="form-group">
            <label for="startMonth">Start Month</label>
            <input type="number" id="startMonth" name="startMonth" class="form-control" value="@Model.TimePeriod.StartMonth" />
        </div>

        <div class="form-group">
            <label for="endMonth">End Month</label>
            <input type="number" id="endMonth" name="endMonth" class="form-control" value="@Model.TimePeriod.EndMonth" />
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <input type="number" id="price" name="price" class="form-control" value="@Model.Price" />
        </div>
            <button type="submit" id="modifyButton" class="btn btn-primary">Modify</button>
    </fieldset>   
    </div>
</form>

<br/>
<br/>


<!-- TODO:// ask the team if the prefer basic Versions for one line update delete forms-->

@*<form id="removeForm@Model.Id" class="removeForm hidden" method="POST" action="/Product/RemovePackage">
    <h2>Remove Package</h2>
    <!-- Input fields for deleting the package -->
    <input type="hidden" name="packageId" value="@Model.Id" />
    <input type="hidden" name="action" value="remove" />
    <input type="text" name="name" value="@Model.Name" />
    <input type="text" name="country" value="@Model.Destination.Country" />
    <input type="text" name="themeName" value="@Model.Theme.Name" />
    <input type="text" name="region" value="@Model.Destination.Region" />
    <input type="text" name="city" value="@Model.Destination.City" />
    <input type="text" name="description" value="@Model.Description" />
    <input type="number" name="startMonth" value="@Model.TimePeriod.StartMonth" />
    <input type="number" name="endMonth" value="@Model.TimePeriod.EndMonth" />
    <input type="number" name="price" value="@Model.Price" />
    <button type="submit">Confirm</button>
    <button type="button" class="remove-button" data-package-id="@Model.Id">Remove</button>
</form>*@

@*  <form id="modifyForm@Model.Id" class="modifyForm hidden" method="POST" action="/Product/ModifyPackage">
    <h2>Modify Package</h2>
    <!-- Input fields for modifying the package -->
    <input type="hidden" name="packageId" value="@Model.Id" />
    <input type="hidden" name="action" value="modify" />
    <input type="text" name="name" value="@Model.Name" />
    <input type="text" name="country" value="@Model.Destination.Country" />
    <input type="text" name="themeName" value="@Model.Theme.Name" />
    <input type="text" name="region" value="@Model.Destination.Region" />
    <input type="text" name="city" value="@Model.Destination.City" />
    <input type="text" name="description" value="@Model.Description" />
    <input type="number" name="startMonth" value="@Model.TimePeriod.StartMonth" />
    <input type="number" name="endMonth" value="@Model.TimePeriod.EndMonth" />
    <input type="number" name="price" value="@Model.Price" />
    <button type="submit">Confirm</button>*@
@* <button type="button" class="modify-button" data-package-id="@Model.Id">Modify</button>*@
@*</form>*@


<!-- Tried Helpers but Foreignkeys disappeared after the modification -->
@*@using (Html.BeginForm("ModifyPackage", "Product", FormMethod.Post, new { id = "modifyForm" + Model.Id, @class = "modifyForm hidden" }))
{
    <h2>Modify Package</h2>
    <fieldset>
        <legend>Package Details</legend>
        <input type="hidden" name="packageId" value="@Model.Id" />
        <input type="hidden" name="action" value="modify" />
        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "name" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination.Country)
            @Html.TextBoxFor(model => model.Destination.Country, new { @class = "form-control", id = "country", name = "Destination.Country" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Theme.Name)
            @Html.TextBoxFor(model => model.Theme.Name, new { @class = "form-control", id = "themeName" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination.Region)
            @Html.TextBoxFor(model => model.Destination.Region, new { @class = "form-control", id = "region" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination.City)
            @Html.TextBoxFor(model => model.Destination.City, new { @class = "form-control", id = "city" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", id = "description" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimePeriod.StartMonth)
            @Html.TextBoxFor(model => model.TimePeriod.StartMonth, new { @class = "form-control", id = "startMonth", type = "number" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimePeriod.EndMonth)
            @Html.TextBoxFor(model => model.TimePeriod.EndMonth, new { @class = "form-control", id = "endMonth", type = "number" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price)
            @Html.TextBoxFor(model => model.Price, new { @class = "form-control", id = "price", type = "number" })
        </div>

        <button type="submit" class="btn btn-primary">Confirm</button>
    </fieldset>
}
*@